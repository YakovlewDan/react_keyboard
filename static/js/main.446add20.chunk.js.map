{"version":3,"sources":["App.tsx","index.tsx"],"names":["App","state","logKey","handleKeyClick","event","setState","key","document","addEventListener","this","removeEventListener","className","Component","ReactDOM","render","getElementById"],"mappings":"2MAMaA,EAAb,4MACEC,MAAyB,CACvBC,OAAQ,IAFZ,EAaEC,eAAiB,SAACC,GAEhB,EAAKC,SAAS,CAAEH,OAAQE,EAAME,OAflC,uDAKE,WACEC,SAASC,iBAAiB,QAASC,KAAKN,kBAN5C,kCASE,WACEI,SAASG,oBAAoB,QAASD,KAAKN,kBAV/C,oBAkBE,WACE,IAAQD,EAAWO,KAAKR,MAAhBC,OAER,OACE,qBAAKS,UAAU,MAAf,SACE,mBAAGA,UAAU,eAAb,SACKT,EAAD,mCAE8BA,EAF9B,KACE,kCAzBd,GAAyBU,a,MCDzBC,IAASC,OACP,cAAC,EAAD,IACAP,SAASQ,eAAe,W","file":"static/js/main.446add20.chunk.js","sourcesContent":["import { Component } from 'react';\n\ntype State = {\n  logKey: string;\n};\n\nexport class App extends Component<{}, State> {\n  state: Readonly<State> = {\n    logKey: '',\n  };\n\n  componentDidMount() {\n    document.addEventListener('keyup', this.handleKeyClick);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('keyup', this.handleKeyClick);\n  }\n\n  handleKeyClick = (event: KeyboardEvent) => {\n    // console.log(event);\n    this.setState({ logKey: event.key });\n  };\n\n  render() {\n    const { logKey } = this.state;\n\n    return (\n      <div className=\"App\">\n        <p className=\"App__message\">\n          {(!logKey\n            ? 'Nothing was pressed yet'\n            : `The last pressed key is [${logKey}]`\n          )}\n        </p>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nimport './index.scss';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}